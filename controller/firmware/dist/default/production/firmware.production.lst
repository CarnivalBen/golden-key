

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jun 26 18:01:27 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC12F1571 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 489 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   120                           PIR1 equ 011h ;# 
   121  0011                     # 528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   122                           PIR2 equ 012h ;# 
   123  0012                     # 549 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   124                           PIR3 equ 013h ;# 
   125  0013                     # 582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   126                           TMR0 equ 015h ;# 
   127  0015                     # 602 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   128                           TMR1 equ 016h ;# 
   129  0016                     # 609 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   130                           TMR1L equ 016h ;# 
   131  0016                     # 629 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   132                           TMR1H equ 017h ;# 
   133  0017                     # 649 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   134                           T1CON equ 018h ;# 
   135  0018                     # 716 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   136                           T1GCON equ 019h ;# 
   137  0019                     # 793 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   138                           TMR2 equ 01Ah ;# 
   139  001A                     # 813 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   140                           PR2 equ 01Bh ;# 
   141  001B                     # 833 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   142                           T2CON equ 01Ch ;# 
   143  001C                     # 904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   144                           TRISA equ 08Ch ;# 
   145  008C                     # 962 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   146                           PIE1 equ 091h ;# 
   147  0091                     # 1001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   148                           PIE2 equ 092h ;# 
   149  0092                     # 1022 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   150                           PIE3 equ 093h ;# 
   151  0093                     # 1055 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   152                           OPTION_REG equ 095h ;# 
   153  0095                     # 1138 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   154                           PCON equ 096h ;# 
   155  0096                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   156                           WDTCON equ 097h ;# 
   157  0097                     # 1254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   158                           OSCTUNE equ 098h ;# 
   159  0098                     # 1312 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   160                           OSCCON equ 099h ;# 
   161  0099                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   162                           OSCSTAT equ 09Ah ;# 
   163  009A                     # 1440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   164                           ADRES equ 09Bh ;# 
   165  009B                     # 1447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   166                           ADRESL equ 09Bh ;# 
   167  009B                     # 1467 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   168                           ADRESH equ 09Ch ;# 
   169  009C                     # 1487 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   170                           ADCON0 equ 09Dh ;# 
   171  009D                     # 1576 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   172                           ADCON1 equ 09Eh ;# 
   173  009E                     # 1642 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   174                           ADCON2 equ 09Fh ;# 
   175  009F                     # 1690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   176                           LATA equ 010Ch ;# 
   177  010C                     # 1743 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   178                           CM1CON0 equ 0111h ;# 
   179  0111                     # 1800 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   180                           CM1CON1 equ 0112h ;# 
   181  0112                     # 1872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   182                           CMOUT equ 0115h ;# 
   183  0115                     # 1892 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1925 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   188                           DACCON0 equ 0118h ;# 
   189  0118                     # 2056 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   190                           DACCON1 equ 0119h ;# 
   191  0119                     # 2108 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   192                           APFCON equ 011Dh ;# 
   193  011D                     # 2113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   194                           APFCON0 equ 011Dh ;# 
   195  011D                     # 2198 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   196                           ANSELA equ 018Ch ;# 
   197  018C                     # 2245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   198                           PMADR equ 0191h ;# 
   199  0191                     # 2252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   200                           PMADRL equ 0191h ;# 
   201  0191                     # 2272 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   202                           PMADRH equ 0192h ;# 
   203  0192                     # 2292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   204                           PMDAT equ 0193h ;# 
   205  0193                     # 2299 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   206                           PMDATL equ 0193h ;# 
   207  0193                     # 2319 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   208                           PMDATH equ 0194h ;# 
   209  0194                     # 2339 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   210                           PMCON1 equ 0195h ;# 
   211  0195                     # 2395 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   212                           PMCON2 equ 0196h ;# 
   213  0196                     # 2415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   214                           VREGCON equ 0197h ;# 
   215  0197                     # 2436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   216                           WPUA equ 020Ch ;# 
   217  020C                     # 2494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   218                           ODCONA equ 028Ch ;# 
   219  028C                     # 2547 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   220                           SLRCONA equ 030Ch ;# 
   221  030C                     # 2600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   222                           INLVLA equ 038Ch ;# 
   223  038C                     # 2658 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   224                           IOCAP equ 0391h ;# 
   225  0391                     # 2716 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   226                           IOCAN equ 0392h ;# 
   227  0392                     # 2774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   228                           IOCAF equ 0393h ;# 
   229  0393                     # 2832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   230                           CWG1DBR equ 0691h ;# 
   231  0691                     # 2890 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   232                           CWG1DBF equ 0692h ;# 
   233  0692                     # 2948 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   234                           CWG1CON0 equ 0693h ;# 
   235  0693                     # 3007 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   236                           CWG1CON1 equ 0694h ;# 
   237  0694                     # 3084 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   238                           CWG1CON2 equ 0695h ;# 
   239  0695                     # 3124 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   240                           PWMEN equ 0D8Eh ;# 
   241  0D8E                     # 3176 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   242                           PWMLD equ 0D8Fh ;# 
   243  0D8F                     # 3228 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   244                           PWMOUT equ 0D90h ;# 
   245  0D90                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   246                           PWM1PH equ 0D91h ;# 
   247  0D91                     # 3287 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   248                           PWM1PHL equ 0D91h ;# 
   249  0D91                     # 3365 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   250                           PWM1PHH equ 0D92h ;# 
   251  0D92                     # 3443 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   252                           PWM1DC equ 0D93h ;# 
   253  0D93                     # 3450 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   254                           PWM1DCL equ 0D93h ;# 
   255  0D93                     # 3528 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   256                           PWM1DCH equ 0D94h ;# 
   257  0D94                     # 3606 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   258                           PWM1PR equ 0D95h ;# 
   259  0D95                     # 3613 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   260                           PWM1PRL equ 0D95h ;# 
   261  0D95                     # 3691 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   262                           PWM1PRH equ 0D96h ;# 
   263  0D96                     # 3769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   264                           PWM1OF equ 0D97h ;# 
   265  0D97                     # 3776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   266                           PWM1OFL equ 0D97h ;# 
   267  0D97                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   268                           PWM1OFH equ 0D98h ;# 
   269  0D98                     # 3932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   270                           PWM1TMR equ 0D99h ;# 
   271  0D99                     # 3939 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   272                           PWM1TMRL equ 0D99h ;# 
   273  0D99                     # 4017 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   274                           PWM1TMRH equ 0D9Ah ;# 
   275  0D9A                     # 4095 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   276                           PWM1CON equ 0D9Bh ;# 
   277  0D9B                     # 4203 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   278                           PWM1INTE equ 0D9Ch ;# 
   279  0D9C                     # 4208 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   280                           PWM1INTCON equ 0D9Ch ;# 
   281  0D9C                     # 4329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   282                           PWM1INTF equ 0D9Dh ;# 
   283  0D9D                     # 4334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   284                           PWM1INTFLG equ 0D9Dh ;# 
   285  0D9D                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   286                           PWM1CLKCON equ 0D9Eh ;# 
   287  0D9E                     # 4563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   288                           PWM1LDCON equ 0D9Fh ;# 
   289  0D9F                     # 4645 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   290                           PWM1OFCON equ 0DA0h ;# 
   291  0DA0                     # 4753 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   292                           PWM2PH equ 0DA1h ;# 
   293  0DA1                     # 4760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   294                           PWM2PHL equ 0DA1h ;# 
   295  0DA1                     # 4838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   296                           PWM2PHH equ 0DA2h ;# 
   297  0DA2                     # 4916 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   298                           PWM2DC equ 0DA3h ;# 
   299  0DA3                     # 4923 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   300                           PWM2DCL equ 0DA3h ;# 
   301  0DA3                     # 5001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   302                           PWM2DCH equ 0DA4h ;# 
   303  0DA4                     # 5079 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   304                           PWM2PR equ 0DA5h ;# 
   305  0DA5                     # 5086 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   306                           PWM2PRL equ 0DA5h ;# 
   307  0DA5                     # 5164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   308                           PWM2PRH equ 0DA6h ;# 
   309  0DA6                     # 5242 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   310                           PWM2OF equ 0DA7h ;# 
   311  0DA7                     # 5249 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   312                           PWM2OFL equ 0DA7h ;# 
   313  0DA7                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   314                           PWM2OFH equ 0DA8h ;# 
   315  0DA8                     # 5405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   316                           PWM2TMR equ 0DA9h ;# 
   317  0DA9                     # 5412 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   318                           PWM2TMRL equ 0DA9h ;# 
   319  0DA9                     # 5490 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   320                           PWM2TMRH equ 0DAAh ;# 
   321  0DAA                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   322                           PWM2CON equ 0DABh ;# 
   323  0DAB                     # 5676 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   324                           PWM2INTE equ 0DACh ;# 
   325  0DAC                     # 5681 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   326                           PWM2INTCON equ 0DACh ;# 
   327  0DAC                     # 5802 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   328                           PWM2INTF equ 0DADh ;# 
   329  0DAD                     # 5807 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   330                           PWM2INTFLG equ 0DADh ;# 
   331  0DAD                     # 5928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   332                           PWM2CLKCON equ 0DAEh ;# 
   333  0DAE                     # 6036 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   334                           PWM2LDCON equ 0DAFh ;# 
   335  0DAF                     # 6118 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   336                           PWM2OFCON equ 0DB0h ;# 
   337  0DB0                     # 6226 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   338                           PWM3PH equ 0DB1h ;# 
   339  0DB1                     # 6233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   340                           PWM3PHL equ 0DB1h ;# 
   341  0DB1                     # 6311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   342                           PWM3PHH equ 0DB2h ;# 
   343  0DB2                     # 6389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   344                           PWM3DC equ 0DB3h ;# 
   345  0DB3                     # 6396 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   346                           PWM3DCL equ 0DB3h ;# 
   347  0DB3                     # 6474 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   348                           PWM3DCH equ 0DB4h ;# 
   349  0DB4                     # 6552 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   350                           PWM3PR equ 0DB5h ;# 
   351  0DB5                     # 6559 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   352                           PWM3PRL equ 0DB5h ;# 
   353  0DB5                     # 6637 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   354                           PWM3PRH equ 0DB6h ;# 
   355  0DB6                     # 6715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   356                           PWM3OF equ 0DB7h ;# 
   357  0DB7                     # 6722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   358                           PWM3OFL equ 0DB7h ;# 
   359  0DB7                     # 6800 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   360                           PWM3OFH equ 0DB8h ;# 
   361  0DB8                     # 6878 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   362                           PWM3TMR equ 0DB9h ;# 
   363  0DB9                     # 6885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   364                           PWM3TMRL equ 0DB9h ;# 
   365  0DB9                     # 6963 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   366                           PWM3TMRH equ 0DBAh ;# 
   367  0DBA                     # 7041 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   368                           PWM3CON equ 0DBBh ;# 
   369  0DBB                     # 7149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   370                           PWM3INTE equ 0DBCh ;# 
   371  0DBC                     # 7154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   372                           PWM3INTCON equ 0DBCh ;# 
   373  0DBC                     # 7275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   374                           PWM3INTF equ 0DBDh ;# 
   375  0DBD                     # 7280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   376                           PWM3INTFLG equ 0DBDh ;# 
   377  0DBD                     # 7401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   378                           PWM3CLKCON equ 0DBEh ;# 
   379  0DBE                     # 7509 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   380                           PWM3LDCON equ 0DBFh ;# 
   381  0DBF                     # 7591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   382                           PWM3OFCON equ 0DC0h ;# 
   383  0DC0                     # 7699 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   384                           STATUS_SHAD equ 0FE4h ;# 
   385  0FE4                     # 7731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   386                           WREG_SHAD equ 0FE5h ;# 
   387  0FE5                     # 7751 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   388                           BSR_SHAD equ 0FE6h ;# 
   389  0FE6                     # 7771 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   390                           PCLATH_SHAD equ 0FE7h ;# 
   391  0FE7                     # 7791 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   392                           FSR0_SHAD equ 0FE8h ;# 
   393  0FE8                     # 7798 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   394                           FSR0L_SHAD equ 0FE8h ;# 
   395  0FE8                     # 7818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   396                           FSR0H_SHAD equ 0FE9h ;# 
   397  0FE9                     # 7838 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   398                           FSR1_SHAD equ 0FEAh ;# 
   399  0FEA                     # 7845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   400                           FSR1L_SHAD equ 0FEAh ;# 
   401  0FEA                     # 7865 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   402                           FSR1H_SHAD equ 0FEBh ;# 
   403  0FEB                     # 7885 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   404                           STKPTR equ 0FEDh ;# 
   405  0FED                     # 7905 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   406                           TOS equ 0FEEh ;# 
   407  0FEE                     # 7912 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   408                           TOSL equ 0FEEh ;# 
   409  0FEE                     # 7932 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic12f1571.h"
   410                           TOSH equ 0FEFh ;# 
   411  0FEF                     	FNCALL	_main,_getSpeed
   412                           	FNCALL	_main,_setShiftReg
   413                           	FNROOT	_main
   414                           	global	_outdata
   415                           psect	nvCOMMON,class=COMMON,space=1,noexec
   416                           global __pnvCOMMON
   417                           __pnvCOMMON:
   418  0074                     _outdata:
   419  0074                            ds      1
   420  0074                     
   421                           	global	_RA1
   422                           _RA1	set	0x61
   423  0061                     	global	_RA5
   424                           _RA5	set	0x65
   425  0065                     	global	_RA4
   426                           _RA4	set	0x64
   427  0064                     	global	_ADRESH
   428                           _ADRESH	set	0x9C
   429  009C                     	global	_ADCON0bits
   430                           _ADCON0bits	set	0x9D
   431  009D                     	global	_ADCON2
   432                           _ADCON2	set	0x9F
   433  009F                     	global	_ADCON1
   434                           _ADCON1	set	0x9E
   435  009E                     	global	_ADCON0
   436                           _ADCON0	set	0x9D
   437  009D                     	global	_TRISAbits
   438                           _TRISAbits	set	0x8C
   439  008C                     	global	_TRISA
   440                           _TRISA	set	0x8C
   441  008C                     	global	_OSCCON
   442                           _OSCCON	set	0x99
   443  0099                     	global	_ANSELA
   444                           _ANSELA	set	0x18C
   445  018C                     	global	_WPUA
   446                           _WPUA	set	0x20C
   447  020C                     	global	_ODCONAbits
   448                           _ODCONAbits	set	0x28C
   449  028C                     	global	_SLRCONAbits
   450                           _SLRCONAbits	set	0x30C
   451  030C                     	global	_INLVLA
   452                           _INLVLA	set	0x38C
   453  038C                     ; #config settings
   454                           global __CFG_FOSC$INTOSC
   455                           __CFG_FOSC$INTOSC equ 0x0
   456  0000                     global __CFG_WDTE$ON
   457                           __CFG_WDTE$ON equ 0x0
   458  0000                     global __CFG_PWRTE$OFF
   459                           __CFG_PWRTE$OFF equ 0x0
   460  0000                     global __CFG_MCLRE$OFF
   461                           __CFG_MCLRE$OFF equ 0x0
   462  0000                     global __CFG_CP$OFF
   463                           __CFG_CP$OFF equ 0x0
   464  0000                     global __CFG_BOREN$ON
   465                           __CFG_BOREN$ON equ 0x0
   466  0000                     global __CFG_CLKOUTEN$OFF
   467                           __CFG_CLKOUTEN$OFF equ 0x0
   468  0000                     global __CFG_WRT$OFF
   469                           __CFG_WRT$OFF equ 0x0
   470  0000                     global __CFG_PLLEN$ON
   471                           __CFG_PLLEN$ON equ 0x0
   472  0000                     global __CFG_STVREN$ON
   473                           __CFG_STVREN$ON equ 0x0
   474  0000                     global __CFG_BORV$LO
   475                           __CFG_BORV$LO equ 0x0
   476  0000                     global __CFG_LPBOREN$OFF
   477                           __CFG_LPBOREN$OFF equ 0x0
   478  0000                     global __CFG_LVP$ON
   479                           __CFG_LVP$ON equ 0x0
   480  0000                     	file	"C:\Users\BENGOL~1.VOI\AppData\Local\Temp\s1arc."
   481                           	line	#
   482                           psect cinit,class=CODE,delta=2
   483                           global start_initialization
   484                           start_initialization:
   485  03FE                     
   486                           global __initialization
   487                           __initialization:
   488  03FE                     psect cinit,class=CODE,delta=2,merge=1
   489                           global end_of_initialization,__end_of__initialization
   490                           
   491                           ;End of C runtime variable initialization code
   492                           
   493                           end_of_initialization:
   494  03FE                     __end_of__initialization:
   495  03FE                     movlb 0
   496  03FE  0020               ljmp _main	;jump to C main() function
   497  03FF  2BCE               psect	cstackCOMMON,class=COMMON,space=1,noexec
   498                           global __pcstackCOMMON
   499                           __pcstackCOMMON:
   500  0070                     ?_getSpeed:	; 1 bytes @ 0x0
   501  0070                     ??_getSpeed:	; 1 bytes @ 0x0
   502  0070                     ?_setShiftReg:	; 1 bytes @ 0x0
   503  0070                     ??_setShiftReg:	; 1 bytes @ 0x0
   504  0070                     ?_main:	; 2 bytes @ 0x0
   505  0070                     	ds	1
   506  0070                     	global	setShiftReg@buff
   507                           setShiftReg@buff:	; 1 bytes @ 0x1
   508  0071                     	ds	1
   509  0071                     	global	setShiftReg@mask
   510                           setShiftReg@mask:	; 1 bytes @ 0x2
   511  0072                     	ds	1
   512  0072                     ??_main:	; 1 bytes @ 0x3
   513  0073                     	ds	1
   514  0073                     ;!
   515                           ;!Data Sizes:
   516                           ;!    Strings     0
   517                           ;!    Constant    0
   518                           ;!    Data        0
   519                           ;!    BSS         0
   520                           ;!    Persistent  1
   521                           ;!    Stack       0
   522                           ;!
   523                           ;!Auto Spaces:
   524                           ;!    Space          Size  Autos    Used
   525                           ;!    COMMON           14      4       5
   526                           ;!    BANK0            80      0       0
   527                           ;!    BANK1            32      0       0
   528                           
   529                           ;!
   530                           ;!Pointer List with Targets:
   531                           ;!
   532                           ;!    None.
   533                           
   534                           
   535                           ;!
   536                           ;!Critical Paths under _main in COMMON
   537                           ;!
   538                           ;!    _main->_setShiftReg
   539                           ;!
   540                           ;!Critical Paths under _main in BANK0
   541                           ;!
   542                           ;!    None.
   543                           ;!
   544                           ;!Critical Paths under _main in BANK1
   545                           ;!
   546                           ;!    None.
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   550 ;;
   551                           
   552                           ;!
   553                           ;!Call Graph Tables:
   554                           ;!
   555                           ;! ---------------------------------------------------------------------------------
   556                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   557                           ;! ---------------------------------------------------------------------------------
   558                           ;! (0) _main                                                 1     1      0      60
   559                           ;!                                              3 COMMON     1     1      0
   560                           ;!                           _getSpeed
   561                           ;!                        _setShiftReg
   562                           ;! ---------------------------------------------------------------------------------
   563                           ;! (1) _setShiftReg                                          3     3      0      60
   564                           ;!                                              0 COMMON     3     3      0
   565                           ;! ---------------------------------------------------------------------------------
   566                           ;! (1) _getSpeed                                             0     0      0       0
   567                           ;! ---------------------------------------------------------------------------------
   568                           ;! Estimated maximum stack depth 1
   569                           ;! ---------------------------------------------------------------------------------
   570                           ;!
   571                           ;! Call Graph Graphs:
   572                           ;!
   573                           ;! _main (ROOT)
   574                           ;!   _getSpeed
   575                           ;!   _setShiftReg
   576                           ;!
   577                           
   578                           ;! Address spaces:
   579                           
   580                           ;!Name               Size   Autos  Total    Cost      Usage
   581                           ;!BIGRAM              70      0       0       0        0.0%
   582                           ;!NULL                 0      0       0       0        0.0%
   583                           ;!CODE                 0      0       0       0        0.0%
   584                           ;!BITCOMMON            E      0       0       1        0.0%
   585                           ;!BITSFR0              0      0       0       1        0.0%
   586                           ;!SFR0                 0      0       0       1        0.0%
   587                           ;!COMMON               E      4       5       2       35.7%
   588                           ;!BITSFR1              0      0       0       2        0.0%
   589                           ;!SFR1                 0      0       0       2        0.0%
   590                           ;!BITSFR2              0      0       0       3        0.0%
   591                           ;!SFR2                 0      0       0       3        0.0%
   592                           ;!STACK                0      0       0       3        0.0%
   593                           ;!BITSFR3              0      0       0       4        0.0%
   594                           ;!SFR3                 0      0       0       4        0.0%
   595                           ;!ABS                  0      0       5       4        0.0%
   596                           ;!BITBANK0            50      0       0       5        0.0%
   597                           ;!BITSFR4              0      0       0       5        0.0%
   598                           ;!SFR4                 0      0       0       5        0.0%
   599                           ;!BANK0               50      0       0       6        0.0%
   600                           ;!BITSFR5              0      0       0       6        0.0%
   601                           ;!SFR5                 0      0       0       6        0.0%
   602                           ;!BITBANK1            20      0       0       7        0.0%
   603                           ;!BITSFR6              0      0       0       7        0.0%
   604                           ;!SFR6                 0      0       0       7        0.0%
   605                           ;!BANK1               20      0       0       8        0.0%
   606                           ;!BITSFR7              0      0       0       8        0.0%
   607                           ;!SFR7                 0      0       0       8        0.0%
   608                           ;!BITSFR8              0      0       0       9        0.0%
   609                           ;!SFR8                 0      0       0       9        0.0%
   610                           ;!DATA                 0      0       5       9        0.0%
   611                           ;!BITSFR9              0      0       0      10        0.0%
   612                           ;!SFR9                 0      0       0      10        0.0%
   613                           ;!BITSFR10             0      0       0      11        0.0%
   614                           ;!SFR10                0      0       0      11        0.0%
   615                           ;!BITSFR11             0      0       0      12        0.0%
   616                           ;!SFR11                0      0       0      12        0.0%
   617                           ;!BITSFR12             0      0       0      13        0.0%
   618                           ;!SFR12                0      0       0      13        0.0%
   619                           ;!BITSFR13             0      0       0      14        0.0%
   620                           ;!SFR13                0      0       0      14        0.0%
   621                           ;!BITSFR14             0      0       0      15        0.0%
   622                           ;!SFR14                0      0       0      15        0.0%
   623                           ;!BITSFR15             0      0       0      16        0.0%
   624                           ;!SFR15                0      0       0      16        0.0%
   625                           ;!BITSFR16             0      0       0      17        0.0%
   626                           ;!SFR16                0      0       0      17        0.0%
   627                           ;!BITSFR17             0      0       0      18        0.0%
   628                           ;!SFR17                0      0       0      18        0.0%
   629                           ;!BITSFR18             0      0       0      19        0.0%
   630                           ;!SFR18                0      0       0      19        0.0%
   631                           ;!BITSFR19             0      0       0      20        0.0%
   632                           ;!SFR19                0      0       0      20        0.0%
   633                           ;!BITSFR20             0      0       0      21        0.0%
   634                           ;!SFR20                0      0       0      21        0.0%
   635                           ;!BITSFR21             0      0       0      22        0.0%
   636                           ;!SFR21                0      0       0      22        0.0%
   637                           ;!BITSFR22             0      0       0      23        0.0%
   638                           ;!SFR22                0      0       0      23        0.0%
   639                           ;!BITSFR23             0      0       0      24        0.0%
   640                           ;!SFR23                0      0       0      24        0.0%
   641                           ;!BITSFR24             0      0       0      25        0.0%
   642                           ;!SFR24                0      0       0      25        0.0%
   643                           ;!BITSFR25             0      0       0      26        0.0%
   644                           ;!SFR25                0      0       0      26        0.0%
   645                           ;!BITSFR26             0      0       0      27        0.0%
   646                           ;!SFR26                0      0       0      27        0.0%
   647                           ;!BITSFR27             0      0       0      28        0.0%
   648                           ;!SFR27                0      0       0      28        0.0%
   649                           ;!BITSFR28             0      0       0      29        0.0%
   650                           ;!SFR28                0      0       0      29        0.0%
   651                           ;!BITSFR29             0      0       0      30        0.0%
   652                           ;!SFR29                0      0       0      30        0.0%
   653                           ;!BITSFR30             0      0       0      31        0.0%
   654                           ;!SFR30                0      0       0      31        0.0%
   655                           ;!BITSFR31             0      0       0      32        0.0%
   656                           ;!SFR31                0      0       0      32        0.0%
   657                           
   658                           	global	_main
   659                           
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 26 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  2   44[None  ] int 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B1F/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1
   676 ;;      Params:         0       0       0
   677 ;;      Locals:         0       0       0
   678 ;;      Temps:          1       0       0
   679 ;;      Totals:         1       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		_getSpeed
   684 ;;		_setShiftReg
   685 ;; This function is called by:
   686 ;;		Startup code after reset
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
   690                           	file	"main.c"
   691                           	line	26
   692                           global __pmaintext
   693                           __pmaintext:	;psect for function _main
   694  03CE                     psect	maintext
   695                           	file	"main.c"
   696                           	line	26
   697                           	global	__size_of_main
   698                           	__size_of_main	equ	__end_of_main-_main
   699  0030                     	
   700                           _main:	
   701  03CE                     ;incstack = 0
   702                           	opt	stack 15
   703                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   704                           	line	28
   705                           	
   706                           l528:	
   707  03CE                     # 28 "main.c"
   708                           clrwdt ;# 
   709  03CE  0064               psect	maintext
   710                           	line	31
   711                           	
   712                           l530:	
   713  03CF                     ;main.c: 31:     OSCCON = 0b01111010;
   714                           	movlw	low(07Ah)
   715  03CF  307A               	movlb 1	; select bank1
   716  03D0  0021               	movwf	(153)^080h	;volatile
   717  03D1  0099               	line	34
   718                           	
   719                           l532:	
   720  03D2                     ;main.c: 34:     INLVLA = 0;
   721                           	movlb 7	; select bank7
   722  03D2  0027               	clrf	(908)^0380h	;volatile
   723  03D3  018C               	line	35
   724                           	
   725                           l534:	
   726  03D4                     ;main.c: 35:     ANSELA = 0;
   727                           	movlb 3	; select bank3
   728  03D4  0023               	clrf	(396)^0180h	;volatile
   729  03D5  018C               	line	36
   730                           ;main.c: 36:     TRISA = 0b00111101;
   731                           	movlw	low(03Dh)
   732  03D6  303D               	movlb 1	; select bank1
   733  03D7  0021               	movwf	(140)^080h	;volatile
   734  03D8  008C               	line	37
   735                           	
   736                           l536:	
   737  03D9                     ;main.c: 37:     TRISAbits.TRISA0 = 0;
   738                           	bcf	(140)^080h,0	;volatile
   739  03D9  100C               	line	38
   740                           	
   741                           l538:	
   742  03DA                     ;main.c: 38:     TRISAbits.TRISA1 = 0;
   743                           	bcf	(140)^080h,1	;volatile
   744  03DA  108C               	line	39
   745                           	
   746                           l540:	
   747  03DB                     ;main.c: 39:     TRISAbits.TRISA2 = 1;
   748                           	bsf	(140)^080h,2	;volatile
   749  03DB  150C               	line	41
   750                           	
   751                           l542:	
   752  03DC                     ;main.c: 41:     TRISAbits.TRISA4 = 0;
   753                           	bcf	(140)^080h,4	;volatile
   754  03DC  120C               	line	42
   755                           	
   756                           l544:	
   757  03DD                     ;main.c: 42:     TRISAbits.TRISA5 = 1;
   758                           	bsf	(140)^080h,5	;volatile
   759  03DD  168C               	line	43
   760                           	
   761                           l546:	
   762  03DE                     ;main.c: 43:     ODCONAbits.ODA1 = 0;
   763                           	movlb 5	; select bank5
   764  03DE  0025               	bcf	(652)^0280h,1	;volatile
   765  03DF  108C               	line	44
   766                           	
   767                           l548:	
   768  03E0                     ;main.c: 44:     SLRCONAbits.SLRA1 = 0;
   769                           	movlb 6	; select bank6
   770  03E0  0026               	bcf	(780)^0300h,1	;volatile
   771  03E1  108C               	line	45
   772                           	
   773                           l550:	
   774  03E2                     ;main.c: 45:     WPUA = 0;
   775                           	movlb 4	; select bank4
   776  03E2  0024               	clrf	(524)^0200h	;volatile
   777  03E3  018C               	line	46
   778                           	
   779                           l552:	
   780  03E4                     ;main.c: 46:     ANSELA = 0b00000100;
   781                           	movlw	low(04h)
   782  03E4  3004               	movlb 3	; select bank3
   783  03E5  0023               	movwf	(396)^0180h	;volatile
   784  03E6  008C               	line	47
   785                           	
   786                           l554:	
   787  03E7                     ;main.c: 47:     ADCON0 = 0b00001001;
   788                           	movlw	low(09h)
   789  03E7  3009               	movlb 1	; select bank1
   790  03E8  0021               	movwf	(157)^080h	;volatile
   791  03E9  009D               	line	48
   792                           	
   793                           l556:	
   794  03EA                     ;main.c: 48:     ADCON1 = 0b00010000;
   795                           	movlw	low(010h)
   796  03EA  3010               	movwf	(158)^080h	;volatile
   797  03EB  009E               	line	49
   798                           ;main.c: 49:     ADCON2 = 0b00000000;
   799                           	clrf	(159)^080h	;volatile
   800  03EC  019F               	goto	l558
   801  03ED  2BEE               	line	52
   802                           ;main.c: 52:     while (1) {
   803                           	
   804                           l45:	
   805  03EE                     	line	54
   806                           	
   807                           l558:	
   808  03EE                     ;main.c: 54:         outdata = getSpeed();
   809                           	fcall	_getSpeed
   810  03EE  3183  2396  3183   	movwf	(??_main+0)+0
   811  03F1  00F3               	movf	(??_main+0)+0,w
   812  03F2  0873               	movwf	(_outdata)
   813  03F3  00F4               	line	55
   814                           	
   815                           l560:	
   816  03F4                     ;main.c: 55:         setShiftReg();
   817                           	fcall	_setShiftReg
   818  03F4  3183  23A1  3183   	line	56
   819                           	
   820                           l562:	
   821  03F7                     ;main.c: 56:         _delaywdt(500);
   822                           	opt asmopt_push
   823                           opt asmopt_off
   824                           	movlw	125
   825  03F7  307D               u47:
   826  03F8                     	clrwdt
   827  03F8  0064               decfsz	wreg
   828  03F9  0B89               	goto	u47
   829  03FA  2BF8               opt asmopt_pop
   830                           
   831                           	goto	l558
   832  03FB  2BEE               	line	58
   833                           ;main.c: 58:     }
   834                           	
   835                           l46:	
   836  03FC                     	goto	l558
   837  03FC  2BEE               	
   838                           l47:	
   839  03FD                     	line	60
   840                           	
   841                           l48:	
   842  03FD                     	global	start
   843                           	ljmp	start
   844  03FD  2801               	opt stack 0
   845                           GLOBAL	__end_of_main
   846                           	__end_of_main:
   847  03FE                     	signat	_main,90
   848                           	global	_setShiftReg
   849                           
   850 ;; *************** function _setShiftReg *****************
   851 ;; Defined at:
   852 ;;		line 72 in file "main.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  mask            1    2[COMMON] unsigned char 
   857 ;;  buff            1    1[COMMON] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1
   867 ;;      Params:         0       0       0
   868 ;;      Locals:         2       0       0
   869 ;;      Temps:          1       0       0
   870 ;;      Totals:         3       0       0
   871 ;;Total ram usage:        3 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   880                           	line	72
   881                           global __ptext1
   882                           __ptext1:	;psect for function _setShiftReg
   883  03A1                     psect	text1
   884                           	file	"main.c"
   885                           	line	72
   886                           	global	__size_of_setShiftReg
   887                           	__size_of_setShiftReg	equ	__end_of_setShiftReg-_setShiftReg
   888  002D                     	
   889                           _setShiftReg:	
   890  03A1                     ;incstack = 0
   891                           	opt	stack 15
   892                           ; Regs used in _setShiftReg: [wreg+status,2+status,0]
   893                           	line	74
   894                           	
   895                           l510:	
   896  03A1                     ;main.c: 74:     byte buff = outdata;
   897                           	movf	(_outdata),w
   898  03A1  0874               	movwf	(??_setShiftReg+0)+0
   899  03A2  00F0               	movf	(??_setShiftReg+0)+0,w
   900  03A3  0870               	movwf	(setShiftReg@buff)
   901  03A4  00F1               	line	75
   902                           ;main.c: 75:     byte mask = 0b10000000;
   903                           	movlw	low(080h)
   904  03A5  3080               	movwf	(??_setShiftReg+0)+0
   905  03A6  00F0               	movf	(??_setShiftReg+0)+0,w
   906  03A7  0870               	movwf	(setShiftReg@mask)
   907  03A8  00F2               	goto	l512
   908  03A9  2BAA               	line	77
   909                           ;main.c: 77:     do {
   910                           	
   911                           l57:	
   912  03AA                     	line	79
   913                           	
   914                           l512:	
   915  03AA                     ;main.c: 79:         if (buff & mask) {
   916                           	movf	(setShiftReg@buff),w
   917  03AA  0871               	andwf	(setShiftReg@mask),w
   918  03AB  0572               	btfsc	status,2
   919  03AC  1903               	goto	u21
   920  03AD  2BAF               	goto	u20
   921  03AE  2BB0               u21:
   922  03AF                     	goto	l58
   923  03AF  2BB3               u20:
   924  03B0                     	line	80
   925                           	
   926                           l514:	
   927  03B0                     ;main.c: 80:             RA4 = 1;
   928                           	movlb 0	; select bank0
   929  03B0  0020               	bsf	(100/8),(100)&7	;volatile
   930  03B1  160C               	line	81
   931                           ;main.c: 81:         } else {
   932                           	goto	l59
   933  03B2  2BB5               	
   934                           l58:	
   935  03B3                     	line	82
   936                           ;main.c: 82:             RA4 = 0;
   937                           	movlb 0	; select bank0
   938  03B3  0020               	bcf	(100/8),(100)&7	;volatile
   939  03B4  120C               	line	83
   940                           ;main.c: 83:         }
   941                           	
   942                           l59:	
   943  03B5                     	line	85
   944                           ;main.c: 85:         RA5 = 1;
   945                           	bsf	(101/8),(101)&7	;volatile
   946  03B5  168C               	line	86
   947                           	
   948                           l516:	
   949  03B6                     ;main.c: 86:         _delaywdt(20);
   950                           	opt asmopt_push
   951                           opt asmopt_off
   952                           	movlw	5
   953  03B6  3005               u57:
   954  03B7                     	clrwdt
   955  03B7  0064               decfsz	wreg
   956  03B8  0B89               	goto	u57
   957  03B9  2BB7               opt asmopt_pop
   958                           
   959                           	line	87
   960                           	
   961                           l518:	
   962  03BA                     ;main.c: 87:         RA5 = 0;
   963                           	movlb 0	; select bank0
   964  03BA  0020               	bcf	(101/8),(101)&7	;volatile
   965  03BB  128C               	line	89
   966                           	
   967                           l520:	
   968  03BC                     ;main.c: 89:         mask = mask >> 1;
   969                           	lsrf	(setShiftReg@mask),w
   970  03BC  3672               	movwf	(??_setShiftReg+0)+0
   971  03BD  00F0               	movf	(??_setShiftReg+0)+0,w
   972  03BE  0870               	movwf	(setShiftReg@mask)
   973  03BF  00F2               	line	90
   974                           	
   975                           l522:	
   976  03C0                     ;main.c: 90:     } while (mask > 1);
   977                           	movlw	low(02h)
   978  03C0  3002               	subwf	(setShiftReg@mask),w
   979  03C1  0272               	skipnc
   980  03C2  1803               	goto	u31
   981  03C3  2BC5               	goto	u30
   982  03C4  2BC6               u31:
   983  03C5                     	goto	l512
   984  03C5  2BAA               u30:
   985  03C6                     	
   986                           l60:	
   987  03C6                     	line	92
   988                           ;main.c: 92:     RA1 = 1;
   989                           	bsf	(97/8),(97)&7	;volatile
   990  03C6  148C               	line	93
   991                           	
   992                           l524:	
   993  03C7                     ;main.c: 93:     _delaywdt(20);
   994                           	opt asmopt_push
   995                           opt asmopt_off
   996                           	movlw	5
   997  03C7  3005               u67:
   998  03C8                     	clrwdt
   999  03C8  0064               decfsz	wreg
  1000  03C9  0B89               	goto	u67
  1001  03CA  2BC8               opt asmopt_pop
  1002                           
  1003                           	line	94
  1004                           	
  1005                           l526:	
  1006  03CB                     ;main.c: 94:     RA1 = 0;
  1007                           	movlb 0	; select bank0
  1008  03CB  0020               	bcf	(97/8),(97)&7	;volatile
  1009  03CC  108C               	line	96
  1010                           	
  1011                           l61:	
  1012  03CD                     	return
  1013  03CD  0008               	opt stack 0
  1014                           GLOBAL	__end_of_setShiftReg
  1015                           	__end_of_setShiftReg:
  1016  03CE                     	signat	_setShiftReg,89
  1017                           	global	_getSpeed
  1018                           
  1019 ;; *************** function _getSpeed *****************
  1020 ;; Defined at:
  1021 ;;		line 63 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1
  1035 ;;      Params:         0       0       0
  1036 ;;      Locals:         0       0       0
  1037 ;;      Temps:          0       0       0
  1038 ;;      Totals:         0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1048                           	line	63
  1049                           global __ptext2
  1050                           __ptext2:	;psect for function _getSpeed
  1051  0396                     psect	text2
  1052                           	file	"main.c"
  1053                           	line	63
  1054                           	global	__size_of_getSpeed
  1055                           	__size_of_getSpeed	equ	__end_of_getSpeed-_getSpeed
  1056  000B                     	
  1057                           _getSpeed:	
  1058  0396                     ;incstack = 0
  1059                           	opt	stack 15
  1060                           ; Regs used in _getSpeed: [wreg]
  1061                           	line	65
  1062                           	
  1063                           l504:	
  1064  0396                     ;main.c: 65:     ADCON0bits.GO_nDONE = 1;
  1065                           	movlb 1	; select bank1
  1066  0396  0021               	bsf	(157)^080h,1	;volatile
  1067  0397  149D               	line	66
  1068                           ;main.c: 66:     while (ADCON0bits.GO_nDONE);
  1069                           	goto	l51
  1070  0398  2B99               	
  1071                           l52:	
  1072  0399                     	
  1073                           l51:	
  1074  0399                     	btfsc	(157)^080h,1	;volatile
  1075  0399  189D               	goto	u11
  1076  039A  2B9C               	goto	u10
  1077  039B  2B9D               u11:
  1078  039C                     	goto	l51
  1079  039C  2B99               u10:
  1080  039D                     	goto	l506
  1081  039D  2B9E               	
  1082                           l53:	
  1083  039E                     	line	68
  1084                           	
  1085                           l506:	
  1086  039E                     ;main.c: 68:     return ADRESH;
  1087                           	movf	(156)^080h,w	;volatile
  1088  039E  081C               	goto	l54
  1089  039F  2BA0               	
  1090                           l508:	
  1091  03A0                     	line	69
  1092                           	
  1093                           l54:	
  1094  03A0                     	return
  1095  03A0  0008               	opt stack 0
  1096                           GLOBAL	__end_of_getSpeed
  1097                           	__end_of_getSpeed:
  1098  03A1                     	signat	_getSpeed,89
  1099                           global	___latbits
  1100                           ___latbits	equ	0
  1101  0000                     	global	btemp
  1102                           	btemp set 07Eh
  1103  007E                     
  1104                           	DABS	1,126,2	;btemp
  1105                           	global	wtemp0
  1106                           	wtemp0 set btemp+0
  1107  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setShiftReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      60
                                              3 COMMON     1     1      0
                           _getSpeed
                        _setShiftReg
 ---------------------------------------------------------------------------------
 (1) _setShiftReg                                          3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getSpeed                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getSpeed
   _setShiftReg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       5       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jun 26 18:01:27 2020

        setShiftReg@buff 0071          setShiftReg@mask 0072              __CFG_CP$OFF 0000  
                     l51 0399                       l52 0399                       l60 03C6  
                     l53 039E                       l61 03CD                       l45 03EE  
                     l54 03A0                       l46 03FC                       l47 03FD  
                     l48 03FD                       l57 03AA                       l58 03B3  
                     l59 03B5                       u10 039D                       u11 039C  
                     u20 03B0                       u21 03AF                       u30 03C6  
                     u31 03C5                       u47 03F8                       u57 03B7  
                     u67 03C8              __CFG_LVP$ON 0000                      l510 03A1  
                    l504 0396                      l520 03BC                      l512 03AA  
                    l506 039E                      l522 03C0                      l514 03B0  
                    l530 03CF                      l508 03A0                      l524 03C7  
                    l516 03B6                      l540 03DB                      l532 03D2  
                    l526 03CB                      l518 03BA                      l550 03E2  
                    l542 03DC                      l534 03D4                      l560 03F4  
                    l552 03E4                      l544 03DD                      l536 03D9  
                    l528 03CE                      l562 03F7                      l554 03E7  
                    l546 03DE                      l538 03DA                      l556 03EA  
                    l548 03E0                      l558 03EE                      _RA1 0061  
                    _RA4 0064                      _RA5 0065             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_WDTE$ON 0000                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _main 03CE                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0001            __CFG_PLLEN$ON 0000  
                  ?_main 0070                    _TRISA 008C                    status 0003  
                  wtemp0 007E           __CFG_MCLRE$OFF 0000          __initialization 03FE  
           __end_of_main 03FE                   ??_main 0073             ?_setShiftReg 0070  
                 _ADCON0 009D                   _ADCON1 009E                   _ADCON2 009F  
                 _ADRESH 009C                   _ANSELA 018C                   _INLVLA 038C  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000         __end_of_getSpeed 03A1  
         __CFG_STVREN$ON 0000  __end_of__initialization 03FE           __pcstackCOMMON 0070  
             __pnvCOMMON 0074               __pmaintext 03CE                ?_getSpeed 0070  
   __size_of_setShiftReg 002D                  __ptext1 03A1                  __ptext2 0396  
                _outdata 0074               ??_getSpeed 0070     end_of_initialization 03FE  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C      start_initialization 03FE  
       __CFG_LPBOREN$OFF 0000                ___latbits 0000        __size_of_getSpeed 000B  
          ??_setShiftReg 0070               _ADCON0bits 009D      __end_of_setShiftReg 03CE  
               _getSpeed 0396            __size_of_main 0030               _ODCONAbits 028C  
            _setShiftReg 03A1              _SLRCONAbits 030C        __CFG_CLKOUTEN$OFF 0000  
