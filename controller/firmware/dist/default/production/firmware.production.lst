

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 27 18:27:13 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	12F1571
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC12F1571 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0015                     	;# 
    64  0016                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001B                     	;# 
    71  001C                     	;# 
    72  008C                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0093                     	;# 
    76  0095                     	;# 
    77  0096                     	;# 
    78  0097                     	;# 
    79  0098                     	;# 
    80  0099                     	;# 
    81  009A                     	;# 
    82  009B                     	;# 
    83  009B                     	;# 
    84  009C                     	;# 
    85  009D                     	;# 
    86  009E                     	;# 
    87  009F                     	;# 
    88  010C                     	;# 
    89  0111                     	;# 
    90  0112                     	;# 
    91  0115                     	;# 
    92  0116                     	;# 
    93  0117                     	;# 
    94  0118                     	;# 
    95  0119                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0194                     	;# 
   105  0195                     	;# 
   106  0196                     	;# 
   107  0197                     	;# 
   108  020C                     	;# 
   109  028C                     	;# 
   110  030C                     	;# 
   111  038C                     	;# 
   112  0391                     	;# 
   113  0392                     	;# 
   114  0393                     	;# 
   115  0691                     	;# 
   116  0692                     	;# 
   117  0693                     	;# 
   118  0694                     	;# 
   119  0695                     	;# 
   120  0D8E                     	;# 
   121  0D8F                     	;# 
   122  0D90                     	;# 
   123  0D91                     	;# 
   124  0D91                     	;# 
   125  0D92                     	;# 
   126  0D93                     	;# 
   127  0D93                     	;# 
   128  0D94                     	;# 
   129  0D95                     	;# 
   130  0D95                     	;# 
   131  0D96                     	;# 
   132  0D97                     	;# 
   133  0D97                     	;# 
   134  0D98                     	;# 
   135  0D99                     	;# 
   136  0D99                     	;# 
   137  0D9A                     	;# 
   138  0D9B                     	;# 
   139  0D9C                     	;# 
   140  0D9C                     	;# 
   141  0D9D                     	;# 
   142  0D9D                     	;# 
   143  0D9E                     	;# 
   144  0D9F                     	;# 
   145  0DA0                     	;# 
   146  0DA1                     	;# 
   147  0DA1                     	;# 
   148  0DA2                     	;# 
   149  0DA3                     	;# 
   150  0DA3                     	;# 
   151  0DA4                     	;# 
   152  0DA5                     	;# 
   153  0DA5                     	;# 
   154  0DA6                     	;# 
   155  0DA7                     	;# 
   156  0DA7                     	;# 
   157  0DA8                     	;# 
   158  0DA9                     	;# 
   159  0DA9                     	;# 
   160  0DAA                     	;# 
   161  0DAB                     	;# 
   162  0DAC                     	;# 
   163  0DAC                     	;# 
   164  0DAD                     	;# 
   165  0DAD                     	;# 
   166  0DAE                     	;# 
   167  0DAF                     	;# 
   168  0DB0                     	;# 
   169  0DB1                     	;# 
   170  0DB1                     	;# 
   171  0DB2                     	;# 
   172  0DB3                     	;# 
   173  0DB3                     	;# 
   174  0DB4                     	;# 
   175  0DB5                     	;# 
   176  0DB5                     	;# 
   177  0DB6                     	;# 
   178  0DB7                     	;# 
   179  0DB7                     	;# 
   180  0DB8                     	;# 
   181  0DB9                     	;# 
   182  0DB9                     	;# 
   183  0DBA                     	;# 
   184  0DBB                     	;# 
   185  0DBC                     	;# 
   186  0DBC                     	;# 
   187  0DBD                     	;# 
   188  0DBD                     	;# 
   189  0DBE                     	;# 
   190  0DBF                     	;# 
   191  0DC0                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEE                     	;# 
   205  0FEF                     	;# 
   206                           
   207                           	psect	nvCOMMON
   208  0074                     __pnvCOMMON:
   209  0074                     _outdata:
   210  0074                     	ds	1
   211  0061                     _RA1	set	97
   212  0065                     _RA5	set	101
   213  0064                     _RA4	set	100
   214  009C                     _ADRESH	set	156
   215  009D                     _ADCON0bits	set	157
   216  009F                     _ADCON2	set	159
   217  009E                     _ADCON1	set	158
   218  009D                     _ADCON0	set	157
   219  008C                     _TRISAbits	set	140
   220  008C                     _TRISA	set	140
   221  0099                     _OSCCON	set	153
   222  018C                     _ANSELA	set	396
   223  020C                     _WPUA	set	524
   224  028C                     _ODCONAbits	set	652
   225  030C                     _SLRCONAbits	set	780
   226  038C                     _INLVLA	set	908
   227                           
   228                           	psect	cinit
   229  03FE                     start_initialization:	
   230                           ; #config settings
   231                           
   232  03FE                     __initialization:
   233  03FE                     end_of_initialization:	
   234                           ;End of C runtime variable initialization code
   235                           
   236  03FE                     __end_of__initialization:
   237  03FE  0020               	movlb	0
   238  03FF  2BD0               	ljmp	_main	;jump to C main() function
   239                           
   240                           	psect	cstackCOMMON
   241  0070                     __pcstackCOMMON:
   242  0070                     ?_getSpeed:
   243  0070                     ??_getSpeed:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?_setShiftReg:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??_setShiftReg:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?_main:	
   253                           ; 1 bytes @ 0x0
   254                           
   255                           
   256                           ; 2 bytes @ 0x0
   257  0070                     	ds	1
   258  0071                     setShiftReg@buff:
   259                           
   260                           ; 1 bytes @ 0x1
   261  0071                     	ds	1
   262  0072                     setShiftReg@mask:
   263                           
   264                           ; 1 bytes @ 0x2
   265  0072                     	ds	1
   266  0073                     ??_main:
   267                           
   268                           ; 1 bytes @ 0x3
   269  0073                     	ds	1
   270                           
   271                           	psect	maintext
   272  03D0                     __pmaintext:	
   273 ;;
   274 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   275 ;;
   276 ;; *************** function _main *****************
   277 ;; Defined at:
   278 ;;		line 26 in file "main.c"
   279 ;; Parameters:    Size  Location     Type
   280 ;;		None
   281 ;; Auto vars:     Size  Location     Type
   282 ;;		None
   283 ;; Return value:  Size  Location     Type
   284 ;;                  2   44[None  ] int 
   285 ;; Registers used:
   286 ;;		wreg, status,2, status,0, pclath, cstack
   287 ;; Tracked objects:
   288 ;;		On entry : B1F/0
   289 ;;		On exit  : 0/0
   290 ;;		Unchanged: 0/0
   291 ;; Data sizes:     COMMON   BANK0   BANK1
   292 ;;      Params:         0       0       0
   293 ;;      Locals:         0       0       0
   294 ;;      Temps:          1       0       0
   295 ;;      Totals:         1       0       0
   296 ;;Total ram usage:        1 bytes
   297 ;; Hardware stack levels required when called:    1
   298 ;; This function calls:
   299 ;;		_getSpeed
   300 ;;		_setShiftReg
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  03D0                     _main:
   309  03D0                     l601:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   312                           
   313  03D0  0064               	clrwdt	;# 
   314  03D1                     l603:
   315                           
   316                           ;main.c: 31:     OSCCON = 0b01111010;
   317  03D1  307A               	movlw	122
   318  03D2  0021               	movlb	1	; select bank1
   319  03D3  0099               	movwf	25	;volatile
   320  03D4                     l605:
   321                           
   322                           ;main.c: 34:     INLVLA = 0;
   323  03D4  0027               	movlb	7	; select bank7
   324  03D5  018C               	clrf	12	;volatile
   325  03D6                     l607:
   326                           
   327                           ;main.c: 35:     ANSELA = 0;
   328  03D6  0023               	movlb	3	; select bank3
   329  03D7  018C               	clrf	12	;volatile
   330                           
   331                           ;main.c: 36:     TRISA = 0b00111101;
   332  03D8  303D               	movlw	61
   333  03D9  0021               	movlb	1	; select bank1
   334  03DA  008C               	movwf	12	;volatile
   335  03DB                     l609:
   336                           
   337                           ;main.c: 37:     TRISAbits.TRISA0 = 0;
   338  03DB  100C               	bcf	12,0	;volatile
   339  03DC                     l611:
   340                           
   341                           ;main.c: 38:     TRISAbits.TRISA1 = 0;
   342  03DC  108C               	bcf	12,1	;volatile
   343  03DD                     l613:
   344                           
   345                           ;main.c: 39:     TRISAbits.TRISA2 = 1;
   346  03DD  150C               	bsf	12,2	;volatile
   347  03DE                     l615:
   348                           
   349                           ;main.c: 41:     TRISAbits.TRISA4 = 0;
   350  03DE  120C               	bcf	12,4	;volatile
   351  03DF                     l617:
   352                           
   353                           ;main.c: 42:     TRISAbits.TRISA5 = 0;
   354  03DF  128C               	bcf	12,5	;volatile
   355  03E0                     l619:
   356                           
   357                           ;main.c: 43:     ODCONAbits.ODA1 = 0;
   358  03E0  0025               	movlb	5	; select bank5
   359  03E1  108C               	bcf	12,1	;volatile
   360  03E2                     l621:
   361                           
   362                           ;main.c: 44:     SLRCONAbits.SLRA1 = 0;
   363  03E2  0026               	movlb	6	; select bank6
   364  03E3  108C               	bcf	12,1	;volatile
   365  03E4                     l623:
   366                           
   367                           ;main.c: 45:     WPUA = 0;
   368  03E4  0024               	movlb	4	; select bank4
   369  03E5  018C               	clrf	12	;volatile
   370  03E6                     l625:
   371                           
   372                           ;main.c: 46:     ANSELA = 0b00000100;
   373  03E6  3004               	movlw	4
   374  03E7  0023               	movlb	3	; select bank3
   375  03E8  008C               	movwf	12	;volatile
   376  03E9                     l627:
   377                           
   378                           ;main.c: 47:     ADCON0 = 0b00001001;
   379  03E9  3009               	movlw	9
   380  03EA  0021               	movlb	1	; select bank1
   381  03EB  009D               	movwf	29	;volatile
   382  03EC                     l629:
   383                           
   384                           ;main.c: 48:     ADCON1 = 0b00010000;
   385  03EC  3010               	movlw	16
   386  03ED  009E               	movwf	30	;volatile
   387                           
   388                           ;main.c: 49:     ADCON2 = 0b00000000;
   389  03EE  019F               	clrf	31	;volatile
   390  03EF                     l631:
   391                           
   392                           ;main.c: 54:         outdata = getSpeed();
   393  03EF  3183  23A5  3183   	fcall	_getSpeed
   394  03F2  00F3               	movwf	??_main
   395  03F3  0873               	movf	??_main,w
   396  03F4  00F4               	movwf	_outdata
   397  03F5                     l633:
   398                           
   399                           ;main.c: 55:         setShiftReg();
   400  03F5  3183  23AD  3183   	fcall	_setShiftReg
   401  03F8                     l635:
   402                           
   403                           ;main.c: 56:         _delaywdt(500);
   404  03F8  307D               	movlw	125
   405  03F9                     u47:
   406  03F9  0064               	clrwdt
   407  03FA  0B89               	decfsz	9,f
   408  03FB  2BF9               	goto	u47
   409  03FC  2BEF               	goto	l631
   410  03FD  2801               	ljmp	start
   411  03FE                     __end_of_main:
   412                           
   413                           	psect	text1
   414  03AD                     __ptext1:	
   415 ;; *************** function _setShiftReg *****************
   416 ;; Defined at:
   417 ;;		line 72 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  mask            1    2[COMMON] unsigned char 
   422 ;;  buff            1    1[COMMON] unsigned char 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1
   432 ;;      Params:         0       0       0
   433 ;;      Locals:         2       0       0
   434 ;;      Temps:          1       0       0
   435 ;;      Totals:         3       0       0
   436 ;;Total ram usage:        3 bytes
   437 ;; Hardware stack levels used:    1
   438 ;; This function calls:
   439 ;;		Nothing
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _setShiftReg
   447  03AD                     _setShiftReg:
   448  03AD                     l593:	
   449                           ;incstack = 0
   450                           ; Regs used in _setShiftReg: [wreg+status,2+status,0]
   451                           
   452                           
   453                           ;main.c: 74:     byte buff = outdata;
   454  03AD  0874               	movf	_outdata,w
   455  03AE  00F0               	movwf	??_setShiftReg
   456  03AF  0870               	movf	??_setShiftReg,w
   457  03B0  00F1               	movwf	setShiftReg@buff
   458                           
   459                           ;main.c: 75:     byte mask = 0b10000000;
   460  03B1  3080               	movlw	128
   461  03B2  00F0               	movwf	??_setShiftReg
   462  03B3  0870               	movf	??_setShiftReg,w
   463  03B4  00F2               	movwf	setShiftReg@mask
   464  03B5                     l595:
   465                           
   466                           ;main.c: 79:         if (buff & mask) {
   467  03B5  0871               	movf	setShiftReg@buff,w
   468  03B6  0572               	andwf	setShiftReg@mask,w
   469  03B7  1903               	btfsc	3,2
   470  03B8  2BBA               	goto	u21
   471  03B9  2BBB               	goto	u20
   472  03BA                     u21:
   473  03BA  2BBE               	goto	l58
   474  03BB                     u20:
   475  03BB                     l597:
   476                           
   477                           ;main.c: 80:             RA4 = 1;
   478  03BB  0020               	movlb	0	; select bank0
   479  03BC  160C               	bsf	12,4	;volatile
   480                           
   481                           ;main.c: 81:         } else {
   482  03BD  2BC0               	goto	l59
   483  03BE                     l58:
   484                           
   485                           ;main.c: 82:             RA4 = 0;
   486  03BE  0020               	movlb	0	; select bank0
   487  03BF  120C               	bcf	12,4	;volatile
   488  03C0                     l59:	
   489                           ;main.c: 83:         }
   490                           
   491                           
   492                           ;main.c: 85:         RA5 = 1;
   493  03C0  168C               	bsf	12,5	;volatile
   494                           
   495                           ;main.c: 87:         RA5 = 0;
   496  03C1  128C               	bcf	12,5	;volatile
   497  03C2                     l599:
   498                           
   499                           ;main.c: 90:         mask = mask >> 1;
   500  03C2  3672               	lsrf	setShiftReg@mask,w
   501  03C3  00F0               	movwf	??_setShiftReg
   502  03C4  0870               	movf	??_setShiftReg,w
   503  03C5  00F2               	movwf	setShiftReg@mask
   504                           
   505                           ;main.c: 91:     } while (mask > 0);
   506  03C6  0872               	movf	setShiftReg@mask,w
   507  03C7  1D03               	btfss	3,2
   508  03C8  2BCA               	goto	u31
   509  03C9  2BCB               	goto	u30
   510  03CA                     u31:
   511  03CA  2BB5               	goto	l595
   512  03CB                     u30:
   513  03CB                     l60:
   514                           
   515                           ;main.c: 93:     RA1 = 1;
   516  03CB  148C               	bsf	12,1	;volatile
   517                           
   518                           ;main.c: 95:     RA1 = 0;
   519  03CC  108C               	bcf	12,1	;volatile
   520                           
   521                           ;main.c: 96:     RA4 = 0;
   522  03CD  120C               	bcf	12,4	;volatile
   523                           
   524                           ;main.c: 97:     RA5 = 0;
   525  03CE  128C               	bcf	12,5	;volatile
   526  03CF                     l61:
   527  03CF  0008               	return
   528  03D0                     __end_of_setShiftReg:
   529                           
   530                           	psect	text2
   531  03A5                     __ptext2:	
   532 ;; *************** function _getSpeed *****************
   533 ;; Defined at:
   534 ;;		line 63 in file "main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      unsigned char 
   541 ;; Registers used:
   542 ;;		wreg
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1
   548 ;;      Params:         0       0       0
   549 ;;      Locals:         0       0       0
   550 ;;      Temps:          0       0       0
   551 ;;      Totals:         0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _getSpeed
   563  03A5                     _getSpeed:
   564  03A5                     l587:	
   565                           ;incstack = 0
   566                           ; Regs used in _getSpeed: [wreg]
   567                           
   568                           
   569                           ;main.c: 65:     ADCON0bits.GO_nDONE = 1;
   570  03A5  0021               	movlb	1	; select bank1
   571  03A6  149D               	bsf	29,1	;volatile
   572  03A7                     l51:	
   573                           ;main.c: 66:     while (ADCON0bits.GO_nDONE);
   574                           
   575  03A7  189D               	btfsc	29,1	;volatile
   576  03A8  2BAA               	goto	u11
   577  03A9  2BAB               	goto	u10
   578  03AA                     u11:
   579  03AA  2BA7               	goto	l51
   580  03AB                     u10:
   581  03AB                     l589:
   582                           
   583                           ;main.c: 68:     return ADRESH;
   584  03AB  081C               	movf	28,w	;volatile
   585  03AC                     l54:
   586  03AC  0008               	return
   587  03AD                     __end_of_getSpeed:
   588  007E                     btemp	set	126	;btemp
   589  007E                     wtemp0	set	126
   590                           
   591                           	psect	config
   592                           
   593                           ;Config register CONFIG1 @ 0x8007
   594                           ;	
   595                           ;	FOSC = INTOSC, INTOSC oscillator; I/O function on CLKIN pin
   596                           ;	Watchdog Timer Enable
   597                           ;	WDTE = ON, WDT enabled
   598                           ;	Power-up Timer Enable
   599                           ;	PWRTE = OFF, PWRT disabled
   600                           ;	MCLR Pin Function Select
   601                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
   602                           ;	Flash Program Memory Code Protection
   603                           ;	CP = OFF, Program memory code protection is disabled
   604                           ;	Brown-out Reset Enable
   605                           ;	BOREN = ON, Brown-out Reset enabled
   606                           ;	Clock Out Enable
   607                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   608  8007                     	org	32775
   609  8007  3FBC               	dw	16316
   610                           
   611                           ;Config register CONFIG2 @ 0x8008
   612                           ;	Flash Memory Self-Write Protection
   613                           ;	WRT = OFF, Write protection off
   614                           ;	PLL Enable
   615                           ;	PLLEN = ON, 4x PLL enabled
   616                           ;	Stack Overflow/Underflow Reset Enable
   617                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   618                           ;	Brown-out Reset Voltage Selection
   619                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   620                           ;	Low Power Brown-out Reset enable bit
   621                           ;	LPBOREN = OFF, LPBOR is disabled
   622                           ;	Low-Voltage Programming Enable
   623                           ;	LVP = ON, Low-voltage programming enabled
   624  8008                     	org	32776
   625  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setShiftReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      60
                                              3 COMMON     1     1      0
                           _getSpeed
                        _setShiftReg
 ---------------------------------------------------------------------------------
 (1) _setShiftReg                                          3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _getSpeed                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getSpeed
   _setShiftReg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       5       2       35.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       5       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 27 18:27:13 2020

        setShiftReg@buff 0071          setShiftReg@mask 0072                       l51 03A7  
                     l60 03CB                       l61 03CF                       l54 03AC  
                     l58 03BE                       l59 03C0                       u10 03AB  
                     u11 03AA                       u20 03BB                       u21 03BA  
                     u30 03CB                       u31 03CA                       u47 03F9  
                    l601 03D0                      l611 03DC                      l603 03D1  
                    l621 03E2                      l613 03DD                      l605 03D4  
                    l631 03EF                      l623 03E4                      l615 03DE  
                    l607 03D6                      l633 03F5                      l625 03E6  
                    l617 03DF                      l609 03DB                      l635 03F8  
                    l627 03E9                      l619 03E0                      l629 03EC  
                    l593 03AD                      l587 03A5                      l595 03B5  
                    l589 03AB                      l597 03BB                      l599 03C2  
                    _RA1 0061                      _RA4 0064                      _RA5 0065  
                    wreg 0009                     _WPUA 020C                     _main 03D0  
                   btemp 007E                     start 0001                    ?_main 0070  
                  _TRISA 008C                    status 0003                    wtemp0 007E  
        __initialization 03FE             __end_of_main 03FE                   ??_main 0073  
           ?_setShiftReg 0070                   _ADCON0 009D                   _ADCON1 009E  
                 _ADCON2 009F                   _ADRESH 009C                   _ANSELA 018C  
                 _INLVLA 038C                   _OSCCON 0099         __end_of_getSpeed 03AD  
__end_of__initialization 03FE           __pcstackCOMMON 0070               __pnvCOMMON 0074  
             __pmaintext 03D0                ?_getSpeed 0070     __size_of_setShiftReg 0023  
                __ptext1 03AD                  __ptext2 03A5                  _outdata 0074  
             ??_getSpeed 0070     end_of_initialization 03FE                _TRISAbits 008C  
    start_initialization 03FE                ___latbits 0000        __size_of_getSpeed 0008  
          ??_setShiftReg 0070               _ADCON0bits 009D      __end_of_setShiftReg 03D0  
               _getSpeed 03A5            __size_of_main 002E               _ODCONAbits 028C  
            _setShiftReg 03AD              _SLRCONAbits 030C  
